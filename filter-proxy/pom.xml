<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>at.ac.tuwien.dsg.sanalytics</groupId>
		<artifactId>sanalytics</artifactId>
		<version>0.1-SNAPSHOT</version>
	</parent>
	<packaging>war</packaging>
	<artifactId>filter-proxy</artifactId>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<!-- https://mvnrepository.com/artifact/junit/junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>

		<!-- could be used for parsing the json that follows the metric name in 
			the prometheus output http://www.devjavasource.com/java-8/how-to-read-json-object-using-java-8/ 
			hm. or maybe better the json streaming api here http://www.oracle.com/technetwork/articles/java/json-1973242.html 
			or as a map (since JDK 8u60 http://www.adam-bien.com/roller/abien/entry/converting_json_to_map_with -->
		<!-- <dependency> -->
		<!-- <groupId>com.googlecode.json-simple</groupId> -->
		<!-- <artifactId>json-simple</artifactId> -->
		<!-- <version>1.1</version> -->
		<!-- </dependency> -->

		<dependency>
			<groupId>org.mitre.dsmiley.httpproxy</groupId>
			<artifactId>smiley-http-proxy-servlet</artifactId>
			<version>1.7</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.4.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/javax.servlet/servlet-api -->
		<!-- <dependency> -->
		<!-- <groupId>javax.servlet</groupId> -->
		<!-- <artifactId>servlet-api</artifactId> -->
		<!-- <version>2.5</version> -->
		<!-- <scope>provided</scope> -->
		<!-- </dependency> -->

		<!-- https://mvnrepository.com/artifact/dnsjava/dnsjava -->
		<dependency>
			<groupId>dnsjava</groupId>
			<artifactId>dnsjava</artifactId>
			<version>2.1.7</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
			<version>8.1.7.v20120910</version>
			<scope>provided</scope>
		</dependency>
		
<!-- 		<dependency> -->
<!-- 		  <groupId>io.prometheus.client</groupId> -->
<!-- 		  <artifactId>model</artifactId> -->
<!-- 		  <version>0.0.19</version> -->
<!-- 		</dependency> -->
		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java</artifactId>
			<version>3.1.0</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<!-- <plugin> -->
			<!-- <groupId>net.sf.alchim</groupId> -->
			<!-- <artifactId>winstone-maven-plugin</artifactId> -->
			<!-- <version>1.2</version> -->
			<!-- <executions> -->
			<!-- <execution> -->
			<!-- <phase>package</phase> -->
			<!-- <goals> -->
			<!-- <goal>embed</goal> -->
			<!-- </goals> -->
			<!-- </execution> -->
			<!-- </executions> -->
			<!-- </plugin> -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<warName>${project.artifactId}-standalone</warName>
					<archive>
						<manifest>
							<mainClass>Main</mainClass>
						</manifest>
					</archive>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
				<executions>
					<execution>
						<id>default-war</id>
						<phase>package</phase>
						<goals>
							<goal>war</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>main-class-placement</id>
						<phase>prepare-package</phase>
						<configuration>
							<tasks>
								<move
									todir="${project.build.directory}/${project.artifactId}/">
									<fileset dir="${project.build.directory}/classes/">
										<include name="Main.class" />
									</fileset>
								</move>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<id>jetty-classpath</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<includeGroupIds>org.eclipse.jetty,javax.servlet</includeGroupIds>
							<excludeArtifactIds>jsp-api,jstl</excludeArtifactIds>
							<excludes>META-INF/ECLIPSEF.*</excludes>
							<outputDirectory>
								${project.build.directory}/${project.artifactId}/
							</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
			    <groupId>com.github.os72</groupId>
			    <artifactId>protoc-jar-maven-plugin</artifactId>
			    <version>3.1.0.2</version>
			    <executions>
			        <execution>
			            <phase>generate-sources</phase>
			            <goals>
			                <goal>run</goal>
			            </goals>
			            <configuration>
			                <protocArtifact>com.google.protobuf:protoc:3.1.0</protocArtifact>
			                <inputDirectories>
			                    <include>src/main/resources/</include>
			                </inputDirectories>
			                <outputTargets>
			                    <outputTarget>
			                        <type>java</type>
			                    </outputTarget>
			                    <outputTarget>
			                        <type>grpc-java</type>
			                        <pluginArtifact>io.grpc:protoc-gen-grpc-java:1.0.1</pluginArtifact>
			                    </outputTarget>
			                </outputTargets>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>
		</plugins>
	</build>
</project>