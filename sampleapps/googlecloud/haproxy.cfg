# ... the applications would need extra configuration for this to work. 

global
    maxconn 256

defaults
    log     global
    mode     http
    option    httplog
    option    dontlognull

    option http-pretend-keepalive
    option forwardfor
    option originalto
    option redispatch

    retries    3

    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms

frontend http-in
	mode http
	bind *:80
	option http-server-close
	option forwardfor
	http-request set-header X-Forwarded-Port %[dst_port]
    http-request set-header X-Forwarded-Proto http
    http-request set-header X-Forwarded-Host %[req.hdr(Host)]
	use_backend cadvisor     if { path_beg /cadvisor/ }
	use_backend influx       if { path_beg /influx/ }
	use_backend prom         if { path_beg /prom/ }
	use_backend grafana      if { path_beg /grafana/ }
	use_backend rabbit2mongo if { path_beg /rabbit2mongo/ }
	#default_backend rabbit2mongo
	
backend	cadvisor
	mode http
	#option forwardfor
	server cadvisor1 cadvisor:8080
	reqrep ^([^\ :]*)\ /cadvisor/(.*) \1\ /\2
	
	# Map url path as ProxyPass does
    #reqirep  ^(GET|POST|HEAD)\ /foo/(.*)     \1\ /\2
	# Rewrite redirects as ProxyPassReverse does
    #acl response-is-redirect res.hdr(Location) -m found
    #rspirep ^Location:\ (http|https)://foo.local\/(.*)   Location:\ \1://www.example.com/foo/\2  if response-is-redirect
	
backend	influx
	mode http
	#option forwardfor
	reqrep ^([^\ :]*)\ /influx/(.*) \1\ /\2
	server influx1 influx:8083
	
backend	prom
	mode http
	option forwardfor
	server prom1 prometheus:9090
	
backend	grafana
	mode http
	option forwardfor
	server grafana1 cloudstack_grafana:3000
	reqrep ^([^\ :]*)\ /grafana/(.*) \1\ /\2
	acl response-is-redirect res.hdr(Location) -m found
	rspirep ^Location:\ /(.*)   Location:\ /grafana/\1  if response-is-redirect
	
backend	rabbit2mongo
	mode http
	option forwardfor
	server rabbit2mongo1 rabbit2mongo:8080		
	reqrep ^([^\ :]*)\ /rabbit2mongo/(.*) \1\ /\2		