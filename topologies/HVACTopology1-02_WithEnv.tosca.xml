<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<tosca:Definitions id="HVACSlice" name="HVACSlice"
	xmlns="http://docs.oasis-open.org/tosca/ns/2011/12" 
	xmlns:tosca="http://docs.oasis-open.org/tosca/ns/2011/12" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="http://docs.oasis-open.org/tosca/ns/2011/12 http://docs.oasis-open.org/tosca/TOSCA/v1.0/os/schemas/TOSCA-v1.0.xsd"
	targetNamespace="http://ac.at.tuwien.dsg.sanalytics"
	xmlns:my="http://ac.at.tuwien.dsg.sanalytics">
	
	<!-- this could directly be transformed to the docker-compose file
		for stack deployment docker-compose-sample-stack.yml
		
		the ports there are just defined so i can access 
		the respective services from the outside but it is not needed
		to run -->
	
	<tosca:ArtifactType name="AT_DockerImage">
		<tosca:documentation>a docker image</tosca:documentation>
	</tosca:ArtifactType>
	<!-- i would like to define the artifacts inline in the nodeTemplates
		but while the documentation lists a possibility this is not
		xml/xsd compliant :-(.  -->
	<tosca:ArtifactTemplate type="my:AT_DockerImage" id="mongodbDockerImage">
		<tosca:ArtifactReferences>
			<tosca:ArtifactReference reference="docker:mongo:3.4.1" />
		</tosca:ArtifactReferences>
	</tosca:ArtifactTemplate>
	
	<tosca:ArtifactTemplate type="my:AT_DockerImage" id="sample-cepImage">
		<tosca:ArtifactReferences>
			<tosca:ArtifactReference reference="docker:cproinger/sample-cep" />
		</tosca:ArtifactReferences>
	</tosca:ArtifactTemplate>
	
	<tosca:ArtifactTemplate type="my:AT_DockerImage" id="mqttImage">
		<tosca:ArtifactReferences>
			<tosca:ArtifactReference reference="docker:toke/mosquitto:release-1.4.10-2" />
		</tosca:ArtifactReferences>
	</tosca:ArtifactTemplate>
	
	<tosca:ArtifactTemplate type="my:AT_DockerImage" id="sensorImage">
		<tosca:ArtifactReferences>
			<tosca:ArtifactReference reference="docker:cproinger/sample-sensor" />
		</tosca:ArtifactReferences>
	</tosca:ArtifactTemplate>
	
	<tosca:NodeType name="NT_DockerService">
		<tosca:documentation>a docker service</tosca:documentation>
	</tosca:NodeType>
	<tosca:NodeType name="NT_Environment">
		<tosca:documentation>iot, nfv, cloud</tosca:documentation>
	</tosca:NodeType>
	<tosca:NodeType name="NT_VXLANTunnel">
		<tosca:documentation>environments can be connected via vxlan tunnels</tosca:documentation>
	</tosca:NodeType>
	
	<tosca:NodeType name="NT_OverlayNetwork">
		<tosca:documentation>a docker overlay network</tosca:documentation>
	</tosca:NodeType>
	
	<tosca:RelationshipType name="RT_DependsOn">
		<tosca:ValidSource typeRef="my:NT_DockerService"/>
		<tosca:ValidTarget typeRef="my:NT_DockerService"/>		
	</tosca:RelationshipType>
	
	<tosca:RelationshipType name="RT_InNetwork">
		<tosca:ValidSource typeRef="my:NT_DockerService"/>
		<tosca:ValidTarget typeRef="my:NT_OverlayNetwork"/>
	</tosca:RelationshipType>
	
	<tosca:RelationshipType name="RT_HostedOn">
		<tosca:ValidSource typeRef="my:NT_DockerService"/>
		<tosca:ValidTarget typeRef="NT_Environment"/>
	</tosca:RelationshipType>
	
	<tosca:RelationshipType name="RT_ConnectsToVXLANTunnel">
		<tosca:ValidSource typeRef="NT_Environment"/>
		<tosca:ValidTarget typeRef="NT_VXLANTunnel"/>
	</tosca:RelationshipType>
	
	<tosca:ServiceTemplate id="SimpleHVACApplication">
		<!-- 
		http://docs.oasis-open.org/tosca/TOSCA/v1.0/os/TOSCA-v1.0-os.html
		Chapter 5: Service Templates, says: 
		Elements within a Service Template, such as Node Templates defined in the Topology Template, refer to other TOSCA element, such as Node Types that can be defined in the same Definitions document containing the Service Template, or that can be defined in separate, imported Definitions documents.
		 -->
		<tosca:TopologyTemplate>
			<tosca:NodeTemplate type="my:NT_Environment" id="iotEnv"/>
			<tosca:NodeTemplate type="my:NT_Environment" id="cloudEnv"/>
			<tosca:NodeTemplate type="my:NT_VXLANTunnel" id="appTunnel"/>
	
			<tosca:NodeTemplate type="my:NT_OverlayNetwork" id="appoverlay">
			</tosca:NodeTemplate>			

			<tosca:NodeTemplate type="my:NT_DockerService" id="mymongodb">
				<tosca:DeploymentArtifacts>
					<tosca:DeploymentArtifact name="image" 
						artifactType="my:AT_DockerImage" 
						artifactRef="my:mongodbDockerImage"/>
				</tosca:DeploymentArtifacts>
			</tosca:NodeTemplate>

			<tosca:NodeTemplate type="my:NT_DockerService" id="cep">
				<tosca:DeploymentArtifacts>
					<tosca:DeploymentArtifact name="image" 
						artifactType="my:AT_DockerImage" 
						artifactRef="my:sample-cepImage"/>
				</tosca:DeploymentArtifacts>
			</tosca:NodeTemplate>
			
			<tosca:NodeTemplate type="my:NT_DockerService" id="mqtt">
				<tosca:DeploymentArtifacts>
					<tosca:DeploymentArtifact name="image" 
						artifactType="my:AT_DockerImage" 
						artifactRef="my:mqttImage"/>
				</tosca:DeploymentArtifacts>
			</tosca:NodeTemplate>
			
			<tosca:NodeTemplate type="my:NT_DockerService" id="sensor">
				<tosca:DeploymentArtifacts>
					<tosca:DeploymentArtifact name="image" 
						artifactType="my:AT_DockerImage" 
						artifactRef="my:sensorImage"/>
				</tosca:DeploymentArtifacts>
			</tosca:NodeTemplate>
			<!-- vxlan connection -->
			<tosca:RelationshipTemplate type="my:RT_ConnectsToVXLANTunnel" id="iotEnv_connectsTo_appTunnel">
				<tosca:SourceElement ref="iotEnv"/>
				<tosca:TargetElement ref="appTunnel"/>
			</tosca:RelationshipTemplate>
			<tosca:RelationshipTemplate type="my:RT_ConnectsToVXLANTunnel" id="cloudEnv_connectsTo_appTunnel">
				<tosca:SourceElement ref="cloudEnv"/>
				<tosca:TargetElement ref="appTunnel"/>
			</tosca:RelationshipTemplate>
			<!-- service to environment relationship -->
			<tosca:RelationshipTemplate type="my:RT_HostedOn" id="mymongodb_hostedOn_cloudEnv">
				<tosca:SourceElement ref="mymongodb"/>
				<tosca:TargetElement ref="cloudEnv"/>
			</tosca:RelationshipTemplate>
			<tosca:RelationshipTemplate type="my:RT_HostedOn" id="cep_hostedOn_cloudEnv">
				<tosca:SourceElement ref="cep"/>
				<tosca:TargetElement ref="cloudEnv"/>
			</tosca:RelationshipTemplate>
			<tosca:RelationshipTemplate type="my:RT_HostedOn" id="mqtt_hostedOn_cloudEnv">
				<tosca:SourceElement ref="mqtt"/>
				<tosca:TargetElement ref="cloudEnv"/>
			</tosca:RelationshipTemplate>
			<tosca:RelationshipTemplate type="my:RT_HostedOn" id="sensor_hostedOn_iotEnv">
				<tosca:SourceElement ref="sensor"/>
				<tosca:TargetElement ref="iotEnv"/>
			</tosca:RelationshipTemplate>
			<!-- network relationships -->
			<tosca:RelationshipTemplate type="my:RT_InNetwork" id="mongoDBInOverlay">
				<tosca:SourceElement ref="mymongodb"/>
				<tosca:TargetElement ref="appoverlay"/>
			</tosca:RelationshipTemplate>
			<tosca:RelationshipTemplate type="my:RT_InNetwork" id="cepInOverlay">
				<tosca:SourceElement ref="cep"/>
				<tosca:TargetElement ref="appoverlay"/>
			</tosca:RelationshipTemplate>
			<tosca:RelationshipTemplate type="my:RT_InNetwork" id="mqttInOverlay">
				<tosca:SourceElement ref="mqtt"/>
				<tosca:TargetElement ref="appoverlay"/>
			</tosca:RelationshipTemplate>
			<tosca:RelationshipTemplate type="my:RT_InNetwork" id="sensorInOverlay">
				<tosca:SourceElement ref="sensor"/>
				<tosca:TargetElement ref="appoverlay"/>
			</tosca:RelationshipTemplate>
			
			<!-- service depends_on relationships -->
			<tosca:RelationshipTemplate type="my:RT_DependsOn" id="cep_DependsOn_MongoDB">
				<tosca:SourceElement ref="cep"/>
				<tosca:TargetElement ref="mymongodb"/>
			</tosca:RelationshipTemplate>
			<tosca:RelationshipTemplate type="my:RT_DependsOn" id="cep_DependsOn_MQTTBroker">
				<tosca:SourceElement ref="cep"/>
				<tosca:TargetElement ref="mqtt"/>
			</tosca:RelationshipTemplate>
			<tosca:RelationshipTemplate type="my:RT_DependsOn" id="sensor_DependsOn_MQTTBroker">
				<tosca:SourceElement ref="sensor"/>
				<tosca:TargetElement ref="mqtt"/>
			</tosca:RelationshipTemplate>
		</tosca:TopologyTemplate>
	</tosca:ServiceTemplate>
</tosca:Definitions>
